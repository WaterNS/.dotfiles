#!/bin/bash

# Disable bash history, and clear it
# set +o history # Enabling will show ZERO history, not even in current session
unset HISTFILE # On exit, will not write history file
history -c
rm -f "$HOME/.bash_history" 2> /dev/null
rm -rf "$HOME/.bash_sessions" 2> /dev/null

# Disable OSX session saving
if [[ $OSTYPE == darwin* ]]; then
	touch ~/.bash_sessions_disable
fi

# Disable less history and delete it
export LESSHISTFILE=/dev/null
rm -f "$HOME/.lesshst" 2> /dev/null

# Remove .rnd (seed generated by OpenSSL/PGP)
rm -f "$HOME/.rnd" 2> /dev/null

# Remove vim history
rm -f "$HOME/.viminfo" 2> /dev/null
rm -f "$HOME/.vim/.netrwhist" 2> /dev/null

# VIM: Create backup, swap, and undo folders if don't exist
if [ ! -d ~/.vim/backups ]; then mkdir -p ~/.vim/backups; fi
if [ ! -d ~/.vim/swaps ]; then mkdir -p ~/.vim/swaps; fi
if [ ! -d ~/.vim/undo ]; then mkdir -p ~/.vim/undo; fi

############################################
source $HOME/.dotfiles/bash_functions

# Set default editors
export GIT_EDITOR=vim
export VISUAL=vim
export EDITOR=vim

# Show Full Path in Bash Prompt
#export PS1='\u@\h \W \$ '
#PS1="\[\033[38m\]\u@\h\[\033[32m\] \w \[\033[31m\]\$(prompt_git)\[\033[37m\]$\[\033[00m\] "

# Set ls behavior
if [[ $OSTYPE == darwin* ]]; then
	export LSCOLORS='Affxcxdxbxegedabagacad' # See https://geoff.greer.fm/lscolors/
	alias ls='/bin/ls -alhGpF'
else # Most likely GNU Linux ls
	export LS_COLORS='di=1;30;45:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
	alias ls='/bin/ls -alhpF --color --group-directories-first'
fi

# PATH: Include .dotfiles bin
PATH=$PATH:~/.dotfiles/opt/bin

# Source bash-powerline
source ~/.dotfiles/opt/bash-powerline.sh
#echo $PS1
export PS1="\u\h $(echo $PS1)"
#echo $PS1

# alias common git commands to shorthand
if [ -x "$(command -v git)" ]; then
	alias status='git status'
	alias push='git push'
fi

# GIT PAGER and LESS settings
# Use diff-so-fancy (if available)
if [ -x "$(command -v diff-so-fancy)" ]; then
	# Set Git Pager and LESS settings for session
	export GIT_PAGER='diff-so-fancy | less'
	export LESS="-x2 -RFX $LESS"

	# Include diff-so-fancy colors
	git config --global include.path "~/.dotfiles/git_colors"
else # Set to use LESS as fallback and undo gitconfig change
  export GIT_PAGER='less'
  export LESS="-x2 -RFX $LESS"
	git config --global --unset include.path "~/.dotfiles/git_colors"
fi

# add vim alias to v, run vim with viminfo disabled
if [ -x "$(command -v vim)" ]; then
	alias v='vim'
	alias vim='vim -i NONE'
fi

# youtube-dl shorthand function that does auto retry
if [ -x "$(command -v youtube-dl)" ]; then
	ytdl () { while ! youtube-dl "$1" -c --socket-timeout 5; do echo DISCONNECTED; sleep 5; done; }
fi

# Check if last update was longer than set interval, kick off update if so
if [ -f $HOME/.dotfiles/opt/lastupdate ]; then
	oldtime=$(head -1 $HOME/.dotfiles/opt/lastupdate)
	newtime=$(date +%s)
	difftime=$(($newtime-$oldtime))
	maxtime=$((8*60*60))
fi
if [ $difftime -gt $maxtime ] || [ ! -f $HOME/.dotfiles/opt/lastupdate ]; then
	if [ ! -f $HOME/.dotfiles/opt/lastupdate ]; then
		echo "No update time file found, running update now"
	else
		echo "Last update happened $difftime seconds ago, updating dotfiles"
	fi
	$HOME/.dotfiles/init.sh -u
	echo "Restarting shell..."
	echo "------------------"
	exec bash
else
	echo "Last dotfiles update: $(seconds2time $difftime) ago / Update Interval: $(seconds2time $maxtime)"
	#echo "Update <$maxtime seconds ago, skipping dotfiles update"
fi
